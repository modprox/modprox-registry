// Code autogenerated by mockery v3
//
// Do not manually edit the content of this file.

// Package problemstest contains autogenerated mocks.
package problemstest

import "oss.indeed.com/go/modprox/pkg/coordinates"
import "github.com/stretchr/testify/mock"
import "oss.indeed.com/go/modprox/proxy/internal/problems"

// Tracker is an autogenerated mock type for the Tracker type
type Tracker struct {
	mock.Mock
}

// Problem provides a mock function with given fields: module
func (mockerySelf *Tracker) Problem(module coordinates.Module) (problems.Problem, bool) {
	ret := mockerySelf.Called(module)

	var r0 problems.Problem
	if rf, ok := ret.Get(0).(func(coordinates.Module) problems.Problem); ok {
		r0 = rf(module)
	} else {
		r0 = ret.Get(0).(problems.Problem)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(coordinates.Module) bool); ok {
		r1 = rf(module)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}

// Problems provides a mock function with given fields:
func (mockerySelf *Tracker) Problems() []problems.Problem {
	ret := mockerySelf.Called()

	var r0 []problems.Problem
	if rf, ok := ret.Get(0).(func() []problems.Problem); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]problems.Problem)
		}
	}

	return r0
}

// Set provides a mock function with given fields: mockeryArg0
func (mockerySelf *Tracker) Set(mockeryArg0 problems.Problem) {
	mockerySelf.Called(mockeryArg0)
}
